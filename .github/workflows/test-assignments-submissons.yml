name: Test Assignments Submissions

on:
  push:
    branches:
      - 2025.1
    paths:
      - 'assignments/**/submissions/**'
  pull_request:
    branches:
      - 2025.1
    paths:
      - 'assignments/**/submissions/**'
  workflow_dispatch: 

jobs:
  test-assignments-submissions:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      id: checkout-repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Detect tasks and students
      id: detect-tasks-students
      run: |
        echo "Verificando os arquivos alterados"

        if [ "${{ github.event_name }}" = "pull_request" ]; then
          BASE_REF="origin/${{ github.event.pull_request.base.ref }}"
          git fetch origin ${{ github.event.pull_request.base.ref }} --depth=1
        else
          BASE_REF="${{ github.event.before }}"
        fi

        echo "Diret√≥rio base $BASE_REF"
    
        MODIFIED_FILES=$(git diff --name-only $BASE_REF ${{ github.sha }})
    
        # Obt√©m todas as tarefas modificadas
        MODIFIED_TASKS=$(echo "$MODIFIED_FILES" | grep 'assignments/' | cut -d '/' -f2 | sort -u)

        echo "Tarefas modificadas $MODIFIED_TASKS"
    
        # Obt√©m todos os alunos com submiss√µes alteradas
        MODIFIED_STUDENTS=$(echo "$MODIFIED_FILES" | grep 'submissions/' | cut -d '/' -f4 | sort -u)

        echo "Aluno que enviou a modifica√ß√£o $MODIFIED_STUDENTS"
    
        if [ -z "$MODIFIED_TASKS" ] || [ -z "$MODIFIED_STUDENTS" ]; then
          echo "‚ùå Erro: Nenhuma altera√ß√£o detectada no diret√≥rio correto (assignments/**/submissions/**)"
          exit 1
        fi
    
        echo "Tarefas detectadas: $MODIFIED_TASKS"
        echo "tasks=$MODIFIED_TASKS" >> $GITHUB_ENV
    
        echo "Alunos detectados: $MODIFIED_STUDENTS"
        echo "students=$MODIFIED_STUDENTS" >> $GITHUB_ENV

    - name: Set up JDK 21
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: '21'

    - name: Execute tests for modified submissions
      run: |
        for task in ${{ env.tasks }}; do
          for student in ${{ env.students }}; do
            echo "üöÄ Executando testes para a tarefa '$task' do aluno '$student'..."
    
            # Caminhos
            TASK_DIR="assignments/$task"
            STUDENT_DIR="$TASK_DIR/submissions/$student"
    
            if [ ! -d "$STUDENT_DIR" ]; then
              echo "‚ö†Ô∏è  Aviso: O diret√≥rio do aluno '$student' n√£o existe para a tarefa '$task'! Pulando..."
              continue
            fi
    
            CODE_DIR="$STUDENT_DIR/src"
            if [ ! -d "$CODE_DIR" ]; then
              echo "‚ö†Ô∏è  Aviso: Nenhum c√≥digo-fonte encontrado em '$CODE_DIR'. Pulando..."
              continue
            fi
    
            BIN_DIR="$STUDENT_DIR/bin"
            mkdir -p "$BIN_DIR"
    
            # Baixa depend√™ncias (se necess√°rio)
            mkdir -p "$STUDENT_DIR/lib"
            curl -L -o "$STUDENT_DIR/lib/junit-platform-console-standalone-1.11.4.jar" \
              https://repo1.maven.org/maven2/org/junit/platform/junit-platform-console-standalone/1.11.4/junit-platform-console-standalone-1.11.4.jar
    
            # Compila os arquivos
            javac -cp "$STUDENT_DIR/lib/*" -d "$BIN_DIR" "$CODE_DIR"/*.java "$TASK_DIR/test"/*.java
    
            # Executa os testes
            java -jar "$STUDENT_DIR/lib/junit-platform-console-standalone-1.11.4.jar" --class-path "$BIN_DIR" --scan-class-path
          done
        done
      
